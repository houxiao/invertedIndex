result once seemed unthinkable many republicans, donald trump became likely gop nominee tuesday top rival senator ted cruz withdrew race. 
"we going win again we going win again bigly," confident trump declared trump tower new york tuesday. trump cut swath through 17-person gop field spreading outrageous fringe conspiracy theories about muslims, mexicans, african americans, threatening violence against protesters, leveling misogynist attacks against his female critics. 
he represent party abraham lincoln general election despite little connection any leg party's traditional trio social conservatives, fiscal conservatives, national security conservatives. implausibly, he lead three groups against hillary clinton. 
computer science, knuth–morris–pratt string searching algorithm (or kmp algorithm) searches occurrences "word" w within main "text string" s employing observation mismatch occurs, word itself embodies sufficient information determine next match begin, bypassing re-examination previously matched characters. algorithm conceived 1970 donald knuth vaughan pratt, independently james h. morris. three published jointly 1977. 
string matching algorithm wants find starting index m string s[] matches search word w[]. most straightforward algorithm look character match successive values index m, position string searched, i.e. s[m]. index m reaches end string no match, case search "fail". position m algorithm first checks equality first character word searched, i.e. s[m] =? w[0]. match found, algorithm tests characters word searched checking successive values word position index, i. algorithm retrieves character w[i] word searched checks equality expression s[m+i] =? w[i]. successive characters match w position m, match found position search string. usually, trial check quickly reject trial match. strings uniformly distributed random letters, chance characters match 1 26. most cases, trial check reject match initial letter. chance first two letters match 1 262 (1 676). so characters random, expected complexity searching string s[] length k order k comparisons o(k). expected performance very good. s[] 1 billion characters w[] 1000 characters, string search complete after about one billion character comparisons. expected performance guaranteed. strings random, checking trial m may take many character comparisons. worst case two strings match but last letter. imagine string s[] consists 1 billion characters a, word w[] 999 characters terminating final b character. simple string matching algorithm examine 1000 characters trial position before rejecting match advancing trial position. simple string search example take about 1000 character comparisons times 1 billion positions 1 trillion character comparisons. length w[] n, worst-case performance o(k⋅n). kmp algorithm better worst-case performance straightforward algorithm. kmp spends little time precomputing table (on order size w[], o(n)), uses table efficient search string o(k). difference kmp makes previous match information straightforward algorithm not. example above, kmp sees trial match fail 1000th character (i = 999) s[m+999] ≠ w[999], increment m 1, but know first 998 characters new position already match. kmp matched 999 characters before discovering mismatch 1000th character (position 999). advancing trial match position m one throws away first a, so kmp knows 998 characters match w[] retest them; is, kmp sets i 998. kmp maintains knowledge precomputed table two state variables. kmp discovers mismatch, table determines how much kmp increase (variable m) resume testing (variable i). 
